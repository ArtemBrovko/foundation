<html>

<head>
    <script type="text/javascript" src="{{ config.extjs_path }}/ext-all-debug-w-comments.js"></script>

    <link href="modera/extjs-workspace/packages/modera-theme/build/resources/modera-theme-all-debug.css" rel="stylesheet" />
    <link href="modera/extjs-workspace/packages/modera-runtime/build/resources/modera-runtime-all-debug.css" rel="stylesheet" />
    <script src="modera/extjs-workspace/packages/modera-theme/build/modera-theme.js" type="text/javascript" ></script>

    <script type="text/javascript" src="{{ url('api')}}"></script>

{% for resource in css_resources %}
    <link href="{{ resource }}" rel="stylesheet" />
{% endfor %}

{% for resource in js_resources %}
    <script src="{{ resource }}" type="text/javascript"></script>
{% endfor %}
</head>

<body>

<script type="text/javascript">
    Ext.Loader.setConfig({
        enabled: true,
        paths: {
            MFC: '{{ config.runtime_path }}/MFC'
        }
    })

    Ext.application({
        name: 'MF',
        appFolder: '{{ config.runtime_path }}/MF',

        requires: [
            'MF.Util',
            'MF.runtime.applications.authenticationaware.controller.Workbench'
        ],

        loadController: function(clazz) {

            return this.getController(clazz);
        },

        /**
         * @final
         * @returns {MF.container.Container}
         */
        getContainer: function() {
            if (!this.container) {
                var definitions = this.getContainerServiceDefinitions();
                this.modifyContainerServiceDefinitions(definitions);

                this.container = Ext.create('MF.dependencyinjection.Container', {
                    application: this,
                    definitions: definitions
                });

                this.container.setParameter(
                    'runtime.workbench_controller_class',
                    MF.runtime.applications.authenticationaware.controller.Workbench.$className
                );
            }

            return this.container;
        },

        /**
         * @return {Object}
         */
        getWorkbenchController: function() {
            return this.loadController(this.getContainer().getParameter('runtime.workbench_controller_class'));
        },

        // private
        getContainerServiceDefinitions: function() {
{% autoescape false %}
            return {{ container_services|json_encode(constant('JSON_PRETTY_PRINT'))|mf_prepend_every_line(12, ' ', true) }};
{% endautoescape %}
        },

        /**
         * TEMPLATE-METHOD
         *
         * @protected
         */
        modifyContainerServiceDefinitions: function() {
        },

        // override
        launch: function() {
            var me = this;

            Ext.each(['Viewport', 'Workbench'], function(clazz) {
                me.loadController('MF.runtime.applications.authenticationaware.controller.' + clazz);
            });

            this.getContainer().get('root_execution_context').bootstrap(function() {
                Ext.create('{{ config.viewport_class }}', {});
            });
        }
    });
</script>

</body>
</html>